#!/usr/bin/env python
'''
Created on 14 Jun 2012

@author: david
'''

import sys
from itertools import chain
from argparse import ArgumentParser, REMAINDER
from tracealyze import LogSource, Log, Average

if __name__ == '__main__':
    parser = ArgumentParser(description='Account for where time is being spent.')
    parser.add_argument('--coalesce', help='Coalesce messages of the same type', action='store_true')
    parser.add_argument('files', metavar='FILE', type=LogSource, nargs=REMAINDER, help='Trace file', default=[sys.stdin])
    params = parser.parse_args()
    
    timesets = {}
    
    log = Log(chain.from_iterable(params.files))
    otsgroups = sorted(log.groupByOts(), lambda x,y: cmp(x.earliest().time, y.earliest().time))    
    for group in otsgroups:
        if params.coalesce:
            group.coalesceByType()
        grouptype = ' '.join(x.type for x in group)
        if not timesets.has_key(grouptype):
            timesets[grouptype] = [Average("Total duration")] + [Average(x.type+" until "+y.type) for (x,y) in zip(group.entries, group.entries[1:])]
        timesets[grouptype][0].add(group.duration())
        for i in xrange(len(group.entries)-1):
            timesets[grouptype][i+1].add(group.entries[i+1].latest().time - group.entries[i].earliest().time)
    
    timesets['gaps']=[Average()]
    for i in xrange(len(otsgroups)-1):
        timesets['gaps'][0].add(otsgroups[i+1].earliest().time - otsgroups[i].latest().time)
    
    print "Total Observed Log Time"
    print "======================="
    print log.duration()
    
    for (name, times) in timesets.iteritems():
        print
        print name
        print '=' * len(name)
        for ave in times:
            if ave.name is not '':
                print ave.name
            print '', ave
